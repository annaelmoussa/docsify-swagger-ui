name: Release package

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      # Configure Git
      - name: Git configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      # Bump package version
      - name: Bump version (stable)
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Bump package version (pre-release)
      - name: Bump version (pre-release)
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      # Build project
      - name: Build project
        run: npm run build

      # Commit version bump
      - name: Commit version bump and tag
        run: |
          git add package.json
          git commit -m "chore: release $NEW_VERSION"
          git tag $NEW_VERSION
        env:
          NEW_VERSION: ${{ env.NEW_VERSION }}

      # Publish to npm
      - name: Publish
        run: npm publish --access public --tag $RELEASE_TAG
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM }}
          RELEASE_TAG: ${{ env.RELEASE_TAG }}

      # Push changes
      - name: Push changes to repository
        run: |
          git push origin main && git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create GitHub release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_VERSION }}
          prerelease: ${{ startsWith(github.event.inputs.release-type, 'pre') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
